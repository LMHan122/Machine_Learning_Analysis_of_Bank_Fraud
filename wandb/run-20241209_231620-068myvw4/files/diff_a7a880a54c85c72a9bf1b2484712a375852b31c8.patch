diff --git a/feature_creation.py b/feature_creation.py
index b549caa..6e8d3de 100644
--- a/feature_creation.py
+++ b/feature_creation.py
@@ -7,7 +7,20 @@ from time import time, sleep
 from haversine import haversine, Unit
 import swifter
 from rapidfuzz import fuzz, process
+from geopy.geocoders import Nominatim
 
+geolocator = Nominatim(user_agent="geoapi")
+
+def get_lat_long(city=None, state=None):
+    try:
+        location = geolocator.geocode(f"{city}, {state}")
+        if location:
+            return location.latitude, location.longitude
+        else:
+            return None, None
+    except Exception as e:
+        logger.error(f"Error fetching location for {city}, {state}: {e}")
+        return None, None
 
 def feature_creation():
     # starting logging
@@ -65,7 +78,17 @@ def feature_creation():
     logger.info(
         "Loading pre-mapped lat and long coordinates for customer's city and state, and using it to create 'cust_lat' and 'cust_long' columns."
     )
-    cust_loc = pd.read_csv(r"data/customer_locations.csv")
+    #cust_loc = pd.read_parquet(r"data/cust_loc.parquet")
+    #FIXME: geting lat and long
+    cust_loc = df[["city", "state"]].drop_duplicates()
+
+    cust_loc["lat_long"] = cust_loc.apply(
+        lambda x: get_lat_long(x["city"], x["state"]), axis=1
+    )
+    cust_loc[["cust_lat", "cust_long"]] = pd.DataFrame(
+        cust_loc["lat_long"].tolist(), index=cust_loc.index
+    )
+
 
     df = df.merge(
         cust_loc[["city", "state", "cust_lat", "cust_long"]],
